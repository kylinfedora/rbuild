name: rbuild
description: Radxa Image Builder
inputs:
  board:
    required: true
  distro:
    required: true
  flavor:
    required: true
  artifacts:
    required: false
    default: 'false'
  release-id:
    required: false
  github-token:
    required: false
  prebuilt-rootfs:
    required: false
    default: 'false'
runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        repository: radxa-repo/rbuild
    - name: Install dependencies
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y debos
    - name: Fetch prebuilt rootfs
      if: inputs.prebuilt-rootfs == 'true'
      uses: actions/download-artifact@v3
      with:
        name: rootfs_${{ inputs.distro }}_${{ inputs.flavor }}
        path: .rootfs
    - name: Build
      shell: bash
      run: |
        mkdir .output
        cd .output
        # --root-override is a hidden argument so we can build as root.
        sudo ../rbuild --timestamp --compress --native-build --shrink --root-override ${{ inputs.board }} ${{ inputs.distro }} ${{ inputs.flavor }}
        if [ -n "$(ls -A ./* 2>/dev/null)" ]
        then
          sudo chown $USER ./*
        fi
    - name: Upload image artifacts
      if: inputs.artifacts == 'true' && inputs.board != 'rootfs'
      uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.board }}_${{ inputs.distro }}_${{ inputs.flavor }}
        path: .output
    - name: Upload rootfs artifacts
      if: inputs.artifacts == 'true' && inputs.board == 'rootfs'
      uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.board }}_${{ inputs.distro }}_${{ inputs.flavor }}
        path: .rootfs
    - name: Upload image
      if: inputs.release-id != '' && inputs.github-token != '' && inputs.board != 'rootfs'
      uses: xresloader/upload-to-github-release@v1
      env:
          GITHUB_TOKEN: ${{ inputs.github-token }}
      with:
        release_id: ${{ inputs.release-id }}
        file: .output/*
    - name: Upload rootfs
      if: inputs.release-id != '' && inputs.github-token != '' && inputs.board == 'rootfs'
      uses: xresloader/upload-to-github-release@v1
      env:
          GITHUB_TOKEN: ${{ inputs.github-token }}
      with:
        release_id: ${{ inputs.release-id }}
        file: .rootfs/*
    - name: Rollback release
      if: failure() && inputs.release-id != '' && inputs.github-token != ''
      uses: author/action-rollback@stable
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
      with:
        release_id: ${{ inputs.release-id }}
